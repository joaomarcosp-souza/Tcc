"""
Django settings for Django project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')@gph^=j30vr4vrmbw2qf874myjq^2c2gw)2rlsc6y9h1lg2*e'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    ##'social_django',
    'gfarm.apps.GfarmConfig',  # ativa este módulo
    'users.apps.UsersConfig',
    'lote.apps.LoteConfig',
    'cal.apps.CalConfig',
    'movimentacao.apps.MovimentacaoConfig',
    'autocomplete.apps.AutocompleteConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'social_django.middleware.SocialAuthExceptionMiddleware',  # SOCIAL DJANGO

]
ROOT_URLCONF = 'Django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'social_django.context_processors.backends',  # SOCIAL DJANGO
                'social_django.context_processors.login_redirect',  # SOCIAL DJANGO
            ],
        },
    },
]

## SOCIAL DJANGO
##AUTHENTICATION_BACKENDS = (
##    'social_core.backends.github.GithubOAuth2',
##    'social_core.backends.twitter.TwitterOAuth',
##    'social_core.backends.google.GoogleOpenId',
 ##   'social_core.backends.facebook.FacebookOAuth2',
##    'social_core.backends.google.GoogleOAuth2',
##    'django.contrib.auth.backends.ModelBackend',
##)
##FIM DA CLASSE

WSGI_APPLICATION = 'Django.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Isso Aqui também faz parte do autenticador Social com Django para as Redes Socias


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'


CRISPY_TEMPLATE_PACK = 'bootstrap4'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]


# Login Redirect
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'dash'


# Profile User
# Especificano o caminha para salvar a imagem, dentro dos arquivos do sistema, ao inves de salvar no profile_pics
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Serve para acessar url da iamgem pelo navegador
MEDIA_URL = '/media/'


# Redefinição de Senha com através do email
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'gfarm.suporte@gmail.com'
EMAIL_HOST_PASSWORD = '987654321marcossouza'

#EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")
# # Mensagens do django
# MESSAGE_STORAGE = 'django.contrib.messages.storage.cookie.CookieStorage'



#Algumas informações uteis do social django
# https://python-social-auth-docs.readthedocs.io/en/latest/configuration/settings.html
# SOCIAL DJANGO AUTHENTICATON
SOCIAL_AUTH_FACEBOOK_KEY = '349757205682249'  # App ID
SOCIAL_AUTH_FACEBOOK_SECRET = '40c96db1170dd5f635acab0e67521630'  # App Secret
#Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook. Email is not sent by default, to get it, you must request the email permission:
# SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'locale': 'ru_RU',
    'fields': 'id, name, email'
}

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '421741279821-m6haqqouvulpmd4amiksjvhfnl6cm58c.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'nnyC2_knayvj8M1TyIhmG_hp'

# Em projetos atrás de um proxy reverso que usa HTTPS, 
# os URIs de redirecionamento podem ter o esquema errado (http: // em vez de https: //) 
# se a solicitação não possuir os cabeçalhos apropriados, o que pode causar erros durante o 
# processo de autenticação. Para forçar HTTPS nos URIs finais, defina essa configuração como True

# SOCIAL_AUTH_REVOKE_TOKENS_ON_DISCONNECT = False
# SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = False
